var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = XPalm","category":"page"},{"location":"#XPalm","page":"Home","title":"XPalm","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for XPalm.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [XPalm]","category":"page"},{"location":"#XPalm.AbstractFTSWModel","page":"Home","title":"XPalm.AbstractFTSWModel","text":"AbstractFTSWModel <: AbstractSoil_WaterModel\n\nDefines a structure for soil water model that computes ftsw as an output.\n\n\n\n\n\n","category":"type"},{"location":"#XPalm.AbstractMaintenance_RespirationModel","page":"Home","title":"XPalm.AbstractMaintenance_RespirationModel","text":"maintenance_respiration process abstract model. \n\nAll models implemented to simulate the maintenance_respiration process must be a subtype of this type, e.g.  struct MyMaintenance_RespirationModel <: AbstractMaintenance_RespirationModel end.\n\nYou can list all models implementing this process using subtypes:\n\nExamples\n\nsubtypes(AbstractMaintenance_RespirationModel)\n\nGeneric maintenance repspiration model. \n\nThe models used are defined by the types of the maintenance_respiration fields of a  ModelList.\n\nExamples\n\nmeteo = Atmosphere(T = 20.0, Wind = 1.0, P = 101.3, Rh = 0.65)\n\n# Using Fvcb model:\nleaf =\n    ModelList(\n        maintenance_respiration = RmQ10(),\n        status = (Tₗ = 25.0, PPFD = 1000.0, Cₛ = 400.0, Dₗ = meteo.VPD)\n    )\n\nmaintenance_respiration(leaf, meteo)\n\n\n\n\n\n","category":"type"},{"location":"#XPalm.AbstractPotential_EvapotranspirationModel","page":"Home","title":"XPalm.AbstractPotential_EvapotranspirationModel","text":"potential_evapotranspiration process abstract model. \n\nAll models implemented to simulate the potential_evapotranspiration process must be a subtype of this type, e.g.  struct MyPotential_EvapotranspirationModel <: AbstractPotential_EvapotranspirationModel end.\n\nYou can list all models implementing this process using subtypes:\n\nExamples\n\nsubtypes(AbstractPotential_EvapotranspirationModel)\n\n\n\n\n\n","category":"type"},{"location":"#XPalm.AbstractRoot_GrowthModel","page":"Home","title":"XPalm.AbstractRoot_GrowthModel","text":"root_growth process abstract model. \n\nAll models implemented to simulate the root_growth process must be a subtype of this type, e.g.  struct MyRoot_GrowthModel <: AbstractRoot_GrowthModel end.\n\nYou can list all models implementing this process using subtypes:\n\nExamples\n\nsubtypes(AbstractRoot_GrowthModel)\n\n\n\n\n\n","category":"type"},{"location":"#XPalm.AbstractSoil_WaterModel","page":"Home","title":"XPalm.AbstractSoil_WaterModel","text":"soil_water process abstract model. \n\nAll models implemented to simulate the soil_water process must be a subtype of this type, e.g.  struct MySoil_WaterModel <: AbstractSoil_WaterModel end.\n\nYou can list all models implementing this process using subtypes:\n\nExamples\n\nsubtypes(AbstractSoil_WaterModel)\n\n\n\n\n\n","category":"type"},{"location":"#XPalm.AbstractThermal_TimeModel","page":"Home","title":"XPalm.AbstractThermal_TimeModel","text":"thermal_time process abstract model. \n\nAll models implemented to simulate the thermal_time process must be a subtype of this type, e.g.  struct MyThermal_TimeModel <: AbstractThermal_TimeModel end.\n\nYou can list all models implementing this process using subtypes:\n\nExamples\n\nsubtypes(AbstractThermal_TimeModel)\n\n\n\n\n\n","category":"type"},{"location":"#XPalm.DailyDegreeDays","page":"Home","title":"XPalm.DailyDegreeDays","text":"DailyDegreeDays(TOpt1, TOpt2, TBase, TLim)\nDailyDegreeDays(TOpt1=25, TOpt2=30, TBase=15, TLim=40)\n\nCompute thermal time from daily meteo data\n\nArguments\n\nTOpt1: starting optimal temperature for thermal time calculation (degree Celsius)\nTOpt2: ending optimal temperature for thermal time calculation (degree Celsius)\nTBase: Tbase temperature for thermal time calculation (degree Celsius)\nTLim: limit temperature for thermal time calculation (degree Celsius)\n\n\n\n\n\n","category":"type"},{"location":"#XPalm.ET0_BP","page":"Home","title":"XPalm.ET0_BP","text":"ET0(LATITUDE,ALTITUDE)\nET0(LATITUDE=0.97,ALTITUDE=50)\n\nCompute root growth depending on thermal time and water stress (ftsw)\n\nArguments\n\nLATITUDE: latitude (radian)\nALTITUDE: altitude (m)\n\n\n\n\n\n","category":"type"},{"location":"#XPalm.FTSW","page":"Home","title":"XPalm.FTSW","text":"FTSW(H_FC::Float64, H_WP_Z1::Float64,Z1::Float64,H_WP_Z2::Float64,Z2::Float64,H_0::Float64,KC::Float64,TRESH_EVAP::Float64,TRESH_FTSW_TRANSPI::Float64)\n\nFraction of Transpirable Soil Water model.\n\nArguments\n\nini_root_depth: root depth at initialization (mm)\nH_FC: Humidity at field capacity (g[H20] g[Soil])\nH_WP_Z1: Humidity at wilting point (g[H20] g[Soil]) for the first layer\nZ1: Thickness of the first layer (mm)\nH_WP_Z2: Humidity at wilting point (g[H20] g[Soil]) for the second layer\nZ2: Thickness of the second layer (mm)\nH_0: Initial soil humidity (g[H20] g[Soil])\nKC: cultural coefficient (unitless)\nTRESH_EVAP: fraction of water content in the evaporative layer below which evaporation is reduced (g[H20] g[Soil])\nTRESH_FTSW_TRANSPI: FTSW treshold below which transpiration is reduced (g[H20] g[Soil])\n\n\n\n\n\n","category":"type"},{"location":"#XPalm.FTSW_BP","page":"Home","title":"XPalm.FTSW_BP","text":"FTSW_BP(H_FC::Float64, H_WP_Z1::Float64,Z1::Float64,H_WP_Z2::Float64,Z2::Float64,H_0::Float64,KC::Float64,TRESH_EVAP::Float64,TRESH_FTSW_TRANSPI::Float64)\n\nFraction of Transpirable Soil Water model.\n\nArguments\n\nini_root_depth: root depth at initialization (mm)\nH_FC: Humidity at field capacity (g[H20] g[Soil])\nH_WP_Z1: Humidity at wilting point (g[H20] g[Soil]) for the first layer\nZ1: Thickness of the first layer (mm)\nH_WP_Z2: Humidity at wilting point (g[H20] g[Soil]) for the second layer\nZ2: Thickness of the second layer (mm)\nH_0: Initial soil humidity (g[H20] g[Soil])\nKC: cultural coefficient (unitless)\nTRESH_EVAP: fraction of water content in the evaporative layer below which evaporation is reduced (g[H20] g[Soil])\nTRESH_FTSW_TRANSPI: FTSW treshold below which transpiration is reduced (g[H20] g[Soil])\n\n\n\n\n\n","category":"type"},{"location":"#XPalm.Female","page":"Home","title":"XPalm.Female","text":"Female(state)\n\nA female inflorescence, which has a state that can be either:\n\nInitiation: in initiation phase (cell division)\nAbortion\nFlowering\nBunch: the bunch of fruits is developping\nOleoSynthesis: the inflorescence is in the process of oleosynthesis\nScenescent: dead but still on the plant\nPruned: removed from the plant (e.g. harvested)\n\n\n\n\n\n","category":"type"},{"location":"#XPalm.Internode","page":"Home","title":"XPalm.Internode","text":"Internode(state)\n\nAn internode, which has a state of type InternodeState that can be either:\n\nGrowing: has both growth and maintenance respiration\nSnag: has maintenance respiration only, and no leaf \n\nor reproductive organs\n\n\n\n\n\n","category":"type"},{"location":"#XPalm.Leaf","page":"Home","title":"XPalm.Leaf","text":"Leaf(state)\n\nA leaf, which has a state of type LeafState that can be either:\n\nInitiation: in initiation phase (cell division until begining of elongation)\nSpear: spear phase, almost fully developped, but leaflets are not yet deployed\nOpened: deployed and photosynthetically active\nPruned: dead and removed from the plant\nScenescent: dead but still on the plant\n\n\n\n\n\n","category":"type"},{"location":"#XPalm.Male","page":"Home","title":"XPalm.Male","text":"Male(state)\n\nA male inflorescence, which has a state that can be either:\n\nInitiation: in initiation phase (cell division)\nAbortion\nFlowering\nScenescent: dead but still on the plant\nPruned: removed from the plant\n\n\n\n\n\n","category":"type"},{"location":"#XPalm.Palm","page":"Home","title":"XPalm.Palm","text":"Palm(mtg, phytomer_count, max_rank, node_count)\nPalm()\n\nCreate a new Palm. The maximum rank is used to determine how many living phytomers (i.e. leaves) are there on the Palm.\n\nPalm() (without arguments) creates a new Palm with a single phytomer, one leaf, and a Root system.\n\nArguments\n\nmtg: a MTG object\nphytomer_count: total number of phytomers emitted by the Palm since germination, i.e. physiological age\nmtg_node_count: total number of nodes in the MTG (used to determine the unique ID)\n\n\n\n\n\n","category":"type"},{"location":"#XPalm.Phytomer","page":"Home","title":"XPalm.Phytomer","text":"Phytomer(state)\n\nA phytomer\n\n\n\n\n\n","category":"type"},{"location":"#XPalm.RmQ10","page":"Home","title":"XPalm.RmQ10","text":"RmQ10{O}(Q10) where O <: Organ\n\nMaintenance respiration.\n\nArguments\n\nQ10: Q10 factor (values should usually range between: 1.5 - 2.5, with 2.1 being the most common value)\nRm_base: Base maintenance respiration (gC gDM⁻¹ d⁻¹). Should be around 0.06.\nT_ref: Reference temperature at which Q10 was measured (default: 25.0°C)\n\nExamples\n\nRmQ10{Leaf}(1.5, 0.06, 25.0)\n\n\n\n\n\n","category":"type"},{"location":"#XPalm.RootGrowthFTSW","page":"Home","title":"XPalm.RootGrowthFTSW","text":"root_growth(TRESH_FTSW_SLOW_ROOTS, ROOTS_GROWTH_DEPTH, Z1, Z2)\nroot_growth(TRESH_FTSW_SLOW_ROOTS=0.2, ROOTS_GROWTH_DEPTH=0.3, Z1=200, Z2=2000)\n\nCompute root growth depending on thermal time and water stress (ftsw)\n\nArguments\n\nini_root_depth: initial root depth (mm)\nROOTS_GROWTH_DEPTH: root growth in depth (mm.degreeC days-1)\nTRESH_FTSW_SLOW_ROOTS: ftsw treshold below which roots growth is reduced (unitless [0:1])\nZ1: Thickness of the first soil layer (mm)\nZ2: Thickness of the second soil layer (mm)\n\n\n\n\n\n","category":"type"},{"location":"#PlantSimEngine.run!","page":"Home","title":"PlantSimEngine.run!","text":"Compute degree days\n\nArguments\n\nm: DailyDegreeDays model\n\nReturns\n\nTEff: daily efficient temperature for plant growth (degree C days) \n\n\n\n\n\n","category":"function"},{"location":"#PlantSimEngine.run!-2","page":"Home","title":"PlantSimEngine.run!","text":"Compute root growth\n\nArguments\n\nm: root growth model\nftsw:  fraction of transpirable soil water (unitless [0:1])\nTEff:  daily efficient temperature for plant growth (degree C days) \n\nReturns\n\nroot_depth: root depth (cm)\n\n\n\n\n\n","category":"function"},{"location":"#XPalm.KS-Tuple{Any, Any}","page":"Home","title":"XPalm.KS","text":"KS(fillRate, tresh)\n\nCoefficient of stress. \n\nArguments\n\nfillRate: fill level of the compartment\ntresh: filling treshold of the  compartment below which there is a reduction in the flow\n\n\n\n\n\n","category":"method"},{"location":"#XPalm.KS_bp-Tuple{Any, Any}","page":"Home","title":"XPalm.KS_bp","text":"KS_bp(fillRate, tresh)\n\nCoefficient of stress. \n\nArguments\n\nfillRate: fill level of the compartment\ntresh: filling treshold of the  compartment below which there is a reduction in the flow\n\n\n\n\n\n","category":"method"},{"location":"#XPalm.add_phytomer!-Tuple{Palm, Dates.Date}","page":"Home","title":"XPalm.add_phytomer!","text":"add_phytomer!(palm, initiation_date)\n\nAdd a new phytomer to the palm\n\nArguments\n\npalm: a Palm\ninitiation_date::Dates.Date: date of initiation of the phytomer \n\n\n\n\n\n","category":"method"},{"location":"#XPalm.add_reproductive_organ-Tuple{XPalm.Phytomer, Any}","page":"Home","title":"XPalm.add_reproductive_organ","text":"ex: add_reproductive_organ(node[:organ], node)\n\n\n\n\n\n","category":"method"},{"location":"#XPalm.compute_compartment_size-Tuple{Any, Any}","page":"Home","title":"XPalm.compute_compartment_size","text":"compute_compartment_size(m, root_depth)\n\nCompute the size of the layers of the FTSW model.\n\nArguments\n\nm: FTSW model\nroot_depth: depth of the root system\n\nReturns\n\nSizeC1: size of the evapotranspirable water layer in the first soil layer (mm)\nSizeVap: size of the evaporative layer within the first layer (mm)\nSizeC1minusVap: size of the transpirable layer within the first layer (SizeC1-SizeVap)\nSizeC2: size of the transpirable water layer in the first soil layer (mm)\nSizeC: size of transpirable soil water (mm) (SizeC2 + SizeC1minusVap)\n\n\n\n\n\n","category":"method"},{"location":"#XPalm.compute_compartment_size-Tuple{XPalm.FTSW_BP, Any}","page":"Home","title":"XPalm.compute_compartment_size","text":"compute_compartment_size(m, root_depth)\n\nCompute the size of the layers of the FTSW model.\n\nArguments\n\nm: FTSW model\nroot_depth: depth of the root system\n\nReturns\n\nSizeC1: size of the evapotranspirable water layer in the first soil layer (mm)\nSizeVap: size of the evaporative layer within the first layer (mm)\nSizeC1minusVap: size of the transpirable layer within the first layer (SizeC1-SizeVap)\nSizeC2: size of the transpirable water layer in the first soil layer (mm)\nSizeC: size of transpirable soil water (mm) (SizeC2 + SizeC1minusVap)\n\n\n\n\n\n","category":"method"},{"location":"#XPalm.determine_sex-Tuple{Any, Any, Any}","page":"Home","title":"XPalm.determine_sex","text":"Determine the sex of the reproductive organ based on the trophic state of the palm tree on x last days\n\n\n\n\n\n","category":"method"}]
}
